# =============================================================================
# RELATE BACKEND - API ENVIRONMENT VARIABLES
# =============================================================================
# 
# This file contains environment variables for the FastAPI backend service.
# Copy this file to .env and fill in the actual values.
# 
# SECURITY WARNING: Never commit actual API keys or secrets to version control!
# =============================================================================

# -----------------------------------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------------------------------

# Server Port
PORT=8000

# Server Host (0.0.0.0 for Docker, localhost for local development)
HOST=0.0.0.0

# Environment (development/staging/production)
ENVIRONMENT=development

# Debug Mode (true/false)
DEBUG=true

# Log Level (DEBUG/INFO/WARNING/ERROR/CRITICAL)
LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# FRONTEND CONFIGURATION
# -----------------------------------------------------------------------------

# Frontend URL for CORS configuration (REQUIRED)
# This must match the URL where your frontend is running
# Development: http://localhost:5173 or http://127.0.0.1:5173
# Production: https://your-frontend-domain.com
FRONTEND_URL=http://localhost:5173

# Additional CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# CORS Credentials (true/false)
CORS_CREDENTIALS=true

# -----------------------------------------------------------------------------
# LANGGRAPH AGENT CONFIGURATION
# -----------------------------------------------------------------------------

# LangGraph Server URL (REQUIRED)
# This is the URL of the LangGraph agent service
# Development: http://localhost:2024
# Production: https://your-agent-domain.com
LANGGRAPH_SERVER_URL=http://localhost:2024

# LangGraph API Timeout (in seconds)
LANGGRAPH_TIMEOUT=300

# LangGraph Connection Pool Size
LANGGRAPH_POOL_SIZE=10

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------

# Database URL (Optional - for future use)
# PostgreSQL: postgresql://username:password@host:port/database
# SQLite: sqlite:///path/to/database.db
# DATABASE_URL=postgresql://relate_user:your_password@localhost:5432/relate_db

# Database Connection Pool Settings
# DATABASE_POOL_SIZE=10
# DATABASE_MAX_OVERFLOW=20
# DATABASE_POOL_TIMEOUT=30

# -----------------------------------------------------------------------------
# REDIS CONFIGURATION
# -----------------------------------------------------------------------------

# Redis URL (Optional - for caching and session storage)
# REDIS_URL=redis://localhost:6379

# Redis Connection Pool Settings
# REDIS_POOL_SIZE=10
# REDIS_TIMEOUT=5

# -----------------------------------------------------------------------------
# SECURITY SETTINGS
# -----------------------------------------------------------------------------

# JWT Secret Key (if implementing authentication)
# JWT_SECRET_KEY=your_jwt_secret_key_here

# JWT Algorithm
# JWT_ALGORITHM=HS256

# JWT Expiration Time (in seconds)
# JWT_EXPIRATION=3600

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Request Size Limits
MAX_REQUEST_SIZE=10485760  # 10MB
MAX_UPLOAD_SIZE=52428800   # 50MB

# -----------------------------------------------------------------------------
# API CONFIGURATION
# -----------------------------------------------------------------------------

# API Version
API_VERSION=v1

# API Documentation
API_DOCS_ENABLED=true
API_REDOC_ENABLED=true

# API Title and Description
API_TITLE=Relate Backend API
API_DESCRIPTION=Backend API for the Relate research assistant

# -----------------------------------------------------------------------------
# STREAMING CONFIGURATION
# -----------------------------------------------------------------------------

# Server-Sent Events (SSE) Configuration
SSE_ENABLED=true
SSE_KEEPALIVE_INTERVAL=30
SSE_TIMEOUT=300

# WebSocket Configuration (if implemented)
# WEBSOCKET_ENABLED=true
# WEBSOCKET_TIMEOUT=300

# -----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# -----------------------------------------------------------------------------

# Log Format (json/text)
LOG_FORMAT=json

# Log File Path (Optional)
# LOG_FILE=/var/log/relate/backend.log

# Log Rotation
# LOG_MAX_SIZE=10MB
# LOG_BACKUP_COUNT=5

# -----------------------------------------------------------------------------
# MONITORING & OBSERVABILITY
# -----------------------------------------------------------------------------

# Health Check Configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_ENDPOINT=/health

# Metrics Collection
METRICS_ENABLED=false
METRICS_ENDPOINT=/metrics

# Sentry DSN for error tracking (Optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project

# -----------------------------------------------------------------------------
# PERFORMANCE SETTINGS
# -----------------------------------------------------------------------------

# Worker Configuration
WORKER_PROCESSES=1
WORKER_THREADS=4

# Request Timeout
REQUEST_TIMEOUT=30

# Keep-Alive Timeout
KEEP_ALIVE_TIMEOUT=5

# Max Concurrent Connections
MAX_CONNECTIONS=1000

# -----------------------------------------------------------------------------
# DEVELOPMENT TOOLS
# -----------------------------------------------------------------------------

# Auto-reload on file changes (development only)
AUTO_RELOAD=true

# Profiling (development only)
PROFILING_ENABLED=false

# SQL Query Logging
SQL_ECHO=false

# -----------------------------------------------------------------------------
# DOCKER CONFIGURATION
# -----------------------------------------------------------------------------

# Docker-specific settings (when running in container)
# These are typically set by Docker Compose
# PORT=8000
# LANGGRAPH_SERVER_URL=http://langgraph-api:8000
# DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
# REDIS_URL=redis://redis:6379

# -----------------------------------------------------------------------------
# PRODUCTION DEPLOYMENT
# -----------------------------------------------------------------------------

# Production-specific settings
# Uncomment and update for production deployment

# Production URLs
# FRONTEND_URL=https://your-frontend-domain.com
# LANGGRAPH_SERVER_URL=https://your-agent-domain.com

# Production Database
# DATABASE_URL=postgresql://prod_user:prod_password@prod_host:5432/prod_db

# Production Redis
# REDIS_URL=redis://prod_redis_host:6379

# Production Security
# JWT_SECRET_KEY=your_production_jwt_secret
# CORS_ORIGINS=https://your-frontend-domain.com

# -----------------------------------------------------------------------------
# PLATFORM-SPECIFIC VARIABLES
# -----------------------------------------------------------------------------

# Railway-specific variables
# These are automatically set by Railway
# RAILWAY_ENVIRONMENT=production
# RAILWAY_SERVICE_NAME=backend

# Render-specific variables
# These are automatically set by Render
# RENDER_SERVICE_NAME=backend
# RENDER_EXTERNAL_URL=https://your-app.onrender.com

# Heroku-specific variables
# These are automatically set by Heroku
# DYNO=web.1
# HEROKU_APP_NAME=your-app

# -----------------------------------------------------------------------------
# TESTING CONFIGURATION
# -----------------------------------------------------------------------------

# Test Environment Variables
# TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_db
# TEST_REDIS_URL=redis://localhost:6379/1

# Test Settings
# TESTING=false
# TEST_LANGGRAPH_SERVER_URL=http://localhost:2025

# -----------------------------------------------------------------------------
# BACKUP & MAINTENANCE
# -----------------------------------------------------------------------------

# Backup Configuration (if needed)
# BACKUP_ENABLED=false
# BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=7

# Maintenance Mode
# MAINTENANCE_MODE=false
# MAINTENANCE_MESSAGE=Service temporarily unavailable